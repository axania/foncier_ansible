---
- hosts: alfresco
  become: yes

  vars:
    resolv_searchpath: "{{ dns_resolv_searchpath }}"
    resolv_dns_server: "{{ dns_server_list }}"
    save_hosts: "{{ etc_save_hosts }}"

  tasks:

  - name: set timezone to "{{timezone}}"
    timezone:
      name: "{{timezone}}"
    tags:
       - prep

  - name: Update APT-GET cache
    apt: update_cache=yes
    tags:
       - prep

  - name: Update repository for Docker part 1 - Install some stuff
    become: yes
    command: "sudo apt-get install -y apt-transport-https ca-certificates curl  software-properties-common"
    tags:
       - prep

  - name: Add GPG key for Docker
    apt_key:
      url: "https://download.docker.com/linux/ubuntu/gpg"
      state: present
    tags:
       - prep

  - name: Add APT repo for Docker
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present
    tags:
       - prep

  - name: Update APT-GET cache again
    apt: update_cache=yes
    tags:
       - prep

  - name: Install GIT
    apt:
      name: git
      state: present
      update_cache: yes
    tags:
       - prep

  - name: Install docker-ce with the updated cache and repo
    apt:
      name: docker-ce={{ docker_ce_version }}
      state: present
      update_cache: yes
    tags:
       - prep

  - name: Make sure we have a 'docker' group
    group:
      name: docker
      state: present
    tags:
       - prep

  - name: Add current user to Docker group
    user:
      name: "{{ansible_ssh_user}}"
      group: docker
      append: yes
    tags:
       - prep

  - name: Add 'dd-agent' user to Docker group
    user:
      name: "dd-agent"
      group: docker
      append: yes
    when:
      - datadog_installed
    tags:
      - prep

  - name: Install PIP
    apt:
      name: python-pip
      state: present
      update_cache: yes
    tags:
       - prep

  - name: Upload certificates
    copy:
      src: "artifacts"
      dest: "/"
      owner: "{{ansible_ssh_user}}"
      directory_mode: yes
      group: sudo
      mode: 0755
    tags:
       - prep
       - ssl

  - name: Install PIP Prerequisites
    apt: name={{ item }} state=latest
    with_items:
      - libpq-dev
      - python-psycopg2
    tags:
      - prep
      - pip

  - name: Install Docker Compose
    pip:
       name: docker-compose
       version: "{{ docker_compose_version if docker_compose_version else omit }}"
       state: present
    tags:
       - prep
       - docker-login

  - name: Log into Sogema JFrog Docker registry for current user
    docker_login:
      registry: "{{docker_registry}}"
      username: "{{docker_user}}"
      password: "{{docker_pwd}}"
      email: "{{docker_email}}"
    tags:
       - prep
       - docker-login

  - name: Log into Sogema JFrog Docker registry for '{{ansible_ssh_user}}' user
    docker_login:
      config_path: "/home/{{ansible_ssh_user}}/.docker/config.json"
      registry: "{{docker_registry}}"
      username: "{{docker_user}}"
      password: "{{docker_pwd}}"
      email: "{{docker_email}}"
    tags:
       - prep
       - docker-login

  - name: Create Solr data folder with permissions to '1000' ('solr' inside container)
    file:
      path: "{{edms_data_disk}}/alfresco-solr-data"
      owner: 1000
      group: 1000
      state: directory
      recurse: yes
    when: "'alfresco-solr6' in available_docker_services and edms_data_disk is defined"
    tags:
       - prep
       - solr

  - name: Upload 'alfresco' folder with Dockerfile
    copy:
      src: alfresco
      dest: "/home/{{ansible_ssh_user}}"
      owner: "{{ansible_ssh_user}}"
      group: "docker"
      mode: "u=rw,g=rw,o=r"
    when: "'alfresco' in available_docker_services"
    tags:
       - prep
       - docker-compose
       - deploy


  - name: Upload docker-compose file
    template:
      src: ../templates/alfresco-docker-compose.yml.j2
      dest: "/home/{{ansible_ssh_user}}/docker-compose.yml"
      owner: "{{ansible_ssh_user}}"
      group: docker
      mode: "u=rw,g=rw,o=r"
    tags:
       - prep
       - docker-compose
       - deploy

  - name: Run the 'down' command for Docker Compose
    docker_service:
      project_name: "{{ansible_ssh_user}}"
      project_src: /home/{{ansible_ssh_user}}
      state: absent
    tags:
       - deploy

  - name: Run the 'up' command for Docker Compose
    docker_service:
      project_name: "{{ansible_ssh_user}}"
      project_src: /home/{{ansible_ssh_user}}
      state: present
      pull: "{{ pull_images if pull_images else omit }}"
      services: "{{ available_docker_services }}"
    tags:
       - deploy


  - name: Wait for port 8380 to become open on the host, don't start checking for 10 seconds
    wait_for:
      port: 8380
      connect_timeout: 3
      delay: 10
      timeout: 30
    when: "'alfresco' in available_docker_services"
    tags:
       - creds

  - name: Alfresco set-up - Change admin user password
    uri:
      url: "{{ alfresco_url }}/alfresco/service/api/person/changepassword/admin"
      user: "{{edms_admin_user}}"
      password: "admin"
      method: POST
      body: "{ oldpw: admin, newpw: {{edms_admin_password}} }"
      body_format: json
      status_code: 200, 401
    when: "'alfresco' in available_docker_services"
    tags:
       - creds

  - name: Alfresco set-up - Create service account
    shell: "curl --user {{edms_admin_user}}:{{edms_admin_password}} -H 'Content-Type: application/json' -X POST --data '{\"userName\": \"{{ edms_user }}\", \"firstName\": \"{{edms_user_first_name}}\", \"lastName\": \"{{edms_user_last_name}}\", \"email\": \"{{ edms_user }}\", \"password\":\"{{ edms_password }}\",\"groups\":[\"GROUP_ALFRESCO_ADMINISTRATORS\",\"GROUP_ALFRESCO_MODEL_ADMINISTRATORS\",\"GROUP_ALFRESCO_SEARCH_ADMINISTRATORS\"]}' {{ alfresco_url }}/alfresco/service/api/people;"
    when: "'alfresco' in available_docker_services"
    tags:
       - creds

  - name: Alfresco set-up - Create site
    shell: "curl --user {{ edms_user }}:{{ edms_password }} -H 'Content-Type: application/json' -X POST --data '{\"id\": \"{{ edms_site_id }}\",\"title\": \"{{ edms_site_title }}\",\"description\": \"{{ edms_site_description }}\",\"visibility\": \"MODERATED\"}'  {{ alfresco_url }}/alfresco/api/-default-/public/alfresco/versions/1/sites;"
    when: "'alfresco' in available_docker_services"
    tags:
       - creds

  - name: Alfresco set-up - Give a {{ edms_user_role }} to service account
    shell: "curl --user {{ edms_user }}:{{ edms_password }} -H 'Content-Type: application/json' -X POST --data '{\"person\": {\"userName\": \"{{ edms_user }}\"}, \"role\":\"{{ edms_user_role }}\" }' {{ alfresco_url }}/alfresco/service/api/sites/{{edms_site_id}}/memberships;"
    when: "'alfresco' in available_docker_services"
    tags:
       - creds

  - name: Alfresco set-up - Give a {{ edms_user_role }} to the admin account
    shell: "curl --user {{ edms_user }}:{{ edms_password }} -H 'Content-Type: application/json' -X POST --data '{\"person\": {\"userName\": \"{{ edms_admin_user }}\"}, \"role\":\"{{ edms_user_role }}\" }' {{ alfresco_url }}/alfresco/service/api/sites/{{edms_site_id}}/memberships;"
    when: "'alfresco' in available_docker_services"
    tags:
       - creds

  - name: Alfresco set-up - Create Folder
    shell: "curl --user {{ edms_user }}:{{ edms_password }} -H 'Content-Type: application/json' -X POST --data '{\"name\": \"{{edms_alfresco_folder }}\", \"title\": \"{{edms_alfresco_folder}}\", \"type\":\"cm:folder\" }' {{ alfresco_url }}/alfresco/service/api/site/folder/{{edms_site_id}}/documentLibrary;"
    when: "'alfresco' in available_docker_services"
    tags:
       - creds


  roles:
    - { role: soplakanets.hosts }
    - { role: ypsman.resolv }
    - { role: sogema.filebeat,  when: is_docker_prospector_enabled }
