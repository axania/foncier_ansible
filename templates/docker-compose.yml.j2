version: '3.3'

{% if 'foncier-db' in available_docker_services and foncier_data_disk is not defined %}
volumes:
  postgres:
{% endif %}

# Define the services/containers to be run
services:

{% if is_datadog_on_docker %}
  datadog:
    restart: always
    image: datadog/docker-dd-agent:latest
    ports:
      - "8125:8125/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro 
      - /proc/:/host/proc/:ro 
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro 
    environment:
      API_KEY: "{{ dd_key }}"
      SD_BACKEND: "docker"
      TAGS: "environment:{{ environment_name }},role:docker,product:foncier"
      DD_HOSTNAME: "{{ full_hostname }}"
      DD_PROCESS_AGENT_ENABLED: "{{ dd_process_agent_enabled }}"
{% endif %}

{% if 'foncier-ui' in available_docker_services %}
  foncier-ui:
    restart: always
    image: sogema-docker.jfrog.io/sogema/foncier-ui:{{ foncier_ui_image_version }}
    ports:
      - "4200:4200"
    environment:
      - API_URL={{ api_host }}:{{ api_port }}
      - WORKFLOW_URL={{ camunda_host }}:{{ camunda_port }}
{% if 'foncier-api' in available_docker_services or 'foncier-wf' in available_docker_services %}
    depends_on:
{% if 'foncier-api' in available_docker_services %}
      - foncier-api
{% endif %}
{% if 'foncier-wf' in available_docker_services %}
      - foncier-wf
{% endif %}
{% endif %}
{% endif %}

{% if 'foncier-wf' in available_docker_services %}
  foncier-wf:
    restart: always
    image: sogema-docker.jfrog.io/sogema/foncier-wf:{{ foncier_wf_image_version }}
    ports:
      - "8581:8080"
    environment:
      DB_DRIVER: "org.postgresql.Driver"
      DB_URL: "jdbc:postgresql://{{ db_host }}:{{ db_port }}/process-engine"
      DB_USERNAME: "{{ db_user }}"
      DB_PASSWORD: "{{ db_pass }}"
      WAIT_FOR: "{{ db_host }}:{{ db_port }}"
    volumes:
      - ./custom-config/bpm-platform.xml:/camunda/conf/bpm-platform.xml
      - ./custom-config/web.xml:/camunda/webapps/engine-rest/WEB-INF/web.xml
      - ./custom-config/keycloak.json:/camunda/webapps/engine-rest/WEB-INF/keycloak.json
      - ./custom-config/context.xml:/camunda/webapps/engine-rest/META-INF/context.xml
{% endif %}

{% if 'foncier-api' in available_docker_services %}
  foncier-api:
    restart: always
    image: sogema-docker.jfrog.io/sogema/foncier-api:{{ foncier_api_image_version }}
    ports:
      - "8280:8280"
    environment:
      DB_HOST: "{{ db_host }}"
      DB_PORT: "{{ db_port }}"
      DB_USER: "{{ db_user }}"
      DB_PASS: "{{ db_pass }}"
      DB_NAME: "{{ db_name }}"
      CAMUNDA_ENGINEREST_URL: {{ camunda_enginerest_url }}
      EDMS_USER: {{ edms_user }}
      EDMS_PASSWORD: {{ edms_password }}
      EDMS_DOMAIN: {{ edms_domain }}
      EDMS_SOURCE: {{ edms_source }}
      EDMS_ENABLED: '{{ edms_enabled }}'
      EDMS_TEMP_FILE_DIRECTORY: {{ edms_temp_file_directory }}
      EDMS_SERVER_BASE_FOLDER: {{ edms_server_base_folder }}
      EDMS_SHAREPOINT_SITE: {{ edms_sharepoint_site }}
      EDMS_SHAREPOINT_FOLDER: {{ edms_sharepoint_folder }}
      EDMS_MICROSOFT_STS_URL: {{ edms_microsoft_sts_url }}
      EDMS_ALFRESCO_SITE: {{ edms_alfresco_site }}
      EDMS_ALFRESCO_FOLDER: {{ edms_alfresco_folder }}
      EDMS_ALFRESCO_CONTAINER: {{ edms_alfresco_container }}
      MAIL_HOST: {{ mail_host }}
      MAIL_PORT: {{ mail_port }}
      MAIL_FROM: {{ mail_from }}
      MAIL_USERNAME: {{ mail_username }}
      MAIL_PASSWORD: {{ mail_password }}
      MAIL_PROTOCOL: {{ mail_protocol }}
      MAIL_DEFAULTENCODING: {{ mail_defaultencoding }}
      MAIL_SMTP_AUTH_ENABLED: '{{ mail_smtp_auth_enabled }}'
      MAIL_TLS_ENABLED: '{{ mail_tls_enabled }}'
      MAIL_DEBUG: '{{ mail_debug }}'
      KEYCLOAK_AUTH_SERVER_URL: {{ keycloak_auth_server_url }}
      KEYCLOAK_REALM: {{ keycloak_realm }}
      KEYCLOAK_SSL_REQUIRED: '{{ keycloak_ssl_required }}'
      KEYCLOAK_API_CLIENT: {{ keycloak_api_client }}
      KEYCLOAK_API_CLIENT_SECRET: {{ keycloak_api_client_secret }}
      KEYCLOAK_API_CLIENT_ROLE: {{ keycloak_api_client_role }}
      KEYCLOAK_UI_CLIENT: {{ keycloak_ui_client }}
      KEYCLOAK_API_USERNAME: {{ keycloak_api_username }}
      KEYCLOAK_API_PASSWORD: {{ keycloak_api_password }}
      RULES_BASE_URL: {{rules_base_url}}
      RULES_DEFAULT_TRAN_TYPE: {{rules_default_tran_type}}
      RULES_DEFAULT_TRAN_VERSION: {{rules_default_tran_version}}
      RULES_ENDPOINTS_TASK: {{rules_endpoints_task}}
      RULES_ENDPOINTS_PARTY: {{rules_endpoints_party}}
      RULES_ENDPOINTS_PARTY_GROUP: {{rules_endpoints_party_group}}
      RULES_ENDPOINTS_PARTY_MEMBER: {{rules_endpoints_party_member}}
      MALI_FOLIOS_PER_VOLUME: {{mali_folios_per_volume}}
      LOGS_LEVEL: {{logs_level}}
      HIBERNATE_SHOW_SQL: '{{hibernate_show_sql}}'
      HIBERNATE_LOGS: {{hibernate_logs}}
      KEYCLOAK_LOGS: {{keycloak_logs}}
      SPRING_LOGS: {{spring_logs}}
      SWAGGER_USERNAME: {{swagger_username}}
      SWAGGER_PASSWORD: {{swagger_password}}
      SWAGGER_ROLE: {{swagger_role}}
      SWAGGER_ENABLE: '{{swagger_enable}}'
      JASPER_SERVER: {{jasper_server}}
      JASPER_PORT: {{jasper_port}}
      JASPER_USER: {{jasper_user}}
      JASPER_PASSWORD: {{jasper_password}}
      JASPER_PROTOCOL: {{jasper_protocol}}
      WORKFLOW_URL: {{workflow_url}}
      SIGTAS_BASEURL: {{sigtas_baseurl}}
      SIGTAS_UI_DOMAIN: {{sigtas_ui_domain}}
      SIGTAS_UI_PATH: {{sigtas_ui_path}}
      SIGTAS_LINKS: '{{sigtas_links}}'
      USER_GUIDE_URL: {{user_guide_url}}
      
    volumes:
      - /artifacts/java/cacerts:/etc/ssl/certs/java/cacerts
{% if 'foncier-wf' in available_docker_services %}
    depends_on:
      - foncier-wf
{% endif %}
{% endif %}

{% if 'foncier-db' in available_docker_services %}
  foncier-db:
    restart: always
    image: postgres:10.4-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "{{ db_user }}"
      POSTGRES_PASSWORD: "{{ db_pass }}"
      POSTGRES_DB: "{{ db_name }}"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
{% if foncier_data_disk is not defined %}
      - postgres:/var/lib/postgresql/data
{% else %}
      - {{ foncier_data_disk }}/postgres:/var/lib/postgresql/data
{% endif %}
{% endif %}

{% if 'foncier-db-backup' in available_docker_services %}
  foncier-db-backup:
    restart: always
    image: prodrigestivill/postgres-backup-local:10-alpine
    ports:
      - "8090:8080"
    environment:
      POSTGRES_HOST: foncier-db
      POSTGRES_PORT: 5432
      POSTGRES_DB: {{ db_name }},process-engine
      POSTGRES_USER: {{ db_user }}
      POSTGRES_PASSWORD: {{ db_pass }}
      POSTGRES_EXTRA_OPTS: "-Z9"
      SCHEDULE: "{{ backup_schedule }}"
      BACKUP_KEEP_DAYS: {{ backup_keep_days }}
      BACKUP_KEEP_WEEKS: {{ backup_keep_weeks }}
      BACKUP_KEEP_MONTHS: {{ backup_keep_months }}
      BACKUP_DIR: /backups
      HEALTHCHECK_PORT: 8080
    volumes:
      - {{ backup_client_folder }}/foncier-db-backup:/backups
    depends_on:
      - foncier-db
{% endif %}

{% if 'foncier-rules-api' in available_docker_services %}
  foncier-rules-api:
    restart: always
    image: sogema-docker.jfrog.io/sogema/foncier-rules-api:{{foncier_rules_api_image_version}}
    ports:
      - "8082:8080"
      - "8001:8001"
    #volumes:
    #  - /data/drools/wb_git:/opt/jboss/wildfly/bin/.niogit
    #TODO map /usr/share/maven without loosing its content! believe user issue
    #TODO replace the admin password by loading from environment
    command: ["sh", "-c", "/opt/jboss/wildfly/bin/add-user.sh -a {{drools_workbench_user}} {{drools_workbench_pass}} && /opt/jboss/wildfly/bin/start_server.sh"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 1m30s
      timeout: 10s
      retries: 3    
{% endif %}
