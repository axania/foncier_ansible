version: '3.3' # specify docker-compose version


volumes:
  postgres:
  sonar-postgres:
  sonar-data:

# Define the services/containers to be run
services:
{% if is_datadog_on_docker %}
  datadog:
    restart: always
    image: datadog/docker-dd-agent:12.6.5230-alpine
    ports:
      - "8125:8125/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro 
      - /proc/:/host/proc/:ro 
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro 
    environment:
      API_KEY: "{{ dd_key }}"
      SD_BACKEND: "docker"
      TAGS: "environment:{{ environment_name }},role:docker"
      DD_HOSTNAME: "{{ full_hostname }}" 
{% endif %}

  foncier_ui:
    restart: always
    image: sogema-docker.jfrog.io/sogema/foncier-ui:{{ foncier_ui_image_version }}
    ports:
      - "4200:4200"
    environment:
      - API_URL=foncier_api:8280
      - WORKFLOW_URL=foncier_wf:8080
    depends_on:
      - foncier_api        
      - foncier_wf

  foncier_wf:
    restart: always
    image: camunda/camunda-bpm-platform:{{ foncier_wf_image_version }}
    ports:
      - "8581:8080"

  foncier_api:
    restart: always
    image: sogema-docker.jfrog.io/sogema/foncier-api:{{ foncier_api_image_version }}
    ports:
      - "8280:8280"
    environment:
      DB_HOST: "{{ db_host }}"
      DB_PORT: "{{ db_port }}"
      DB_USER: "{{ db_user }}"
      DB_PASS: "{{ db_pass }}"
      DB_NAME: "{{ db_name }}"
      CAMUNDA_ENGINEREST_URL: {{ test_camunda_enginerest_url }}
      EDMS_USER: {{ edms_user }}
      EDMS_PASSWORD: {{ edms_password }}
      EDMS_DOMAIN: {{ edms_domain }}
      EDMS_SOURCE: {{ edms_source }}
      EDMS_TEMP_FILE_DIRECTORY: {{ edms_temp_file_directory }}
      EDMS_SHAREPOINT_SITE: {{ edms_sharepoint_site }}
      EDMS_SHAREPOINT_FOLDER: {{ edms_sharepoint_folder }}
      MAIL_HOST: {{ mail_host }}
      MAIL_PORT: {{ mail_port }}
      MAIL_USERNAME: {{ mail_username }}
      MAIL_PASSWORD: {{ mail_password }}
      MAIL_PROTOCOL: {{ mail_protocol }}
      MAIL_DEFAULTENCODING: {{ mail_defaultencoding }}
      MAIL_PROPERTIES_MAIL_SMTP_AUTH: {{ mail_properties_mail_smtp_auth }}
      MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: {{ mail_properties_mail_smtp_starttls_enable }}
    depends_on:
      - foncier_wf
      - postgres          

  postgres:
    image: postgres:10.4-alpine
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
      # - ./scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"      
    environment:
      POSTGRES_USER: "{{ db_user }}"
      POSTGRES_PASSWORD: "{{ db_pass }}"
      POSTGRES_DB: "{{ db_name }}"    
      PGDATA: /var/lib/postgresql/data/pgdata


{% if is_drools_enabled %}   
  drools:
    restart: always
    image: jboss/drools-workbench:7.9.0.Final
    ports:
      - "8080:8080"
      - "8001:8001"
{% endif %}        

{% if is_sonar_enabled %}      
  sonarqube:
    image: sonarqube:7.1-alpine
    restart: always
    ports:
      - "9000:9000"      
      - "9092:9092"  
    environment:
      SONARQUBE_JDBC_USERNAME: "sonar"
      SONARQUBE_JDBC_PASSWORD: "sonar"
      SONARQUBE_JDBC_URL: "jdbc:postgresql://sonarqube_db:5432/sonar"   
    volumes:
      - sonar-data:/opt/sonarqube/extensions  
    depends_on: 
      - sonarqube_db      

  sonarqube_db:
    image: postgres:10.4-alpine
    restart: always
    volumes:
      - sonar-postgres:/var/lib/postgresql-sonar/data
      - ./scripts:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"      
    environment:
      POSTGRES_USER: "sonar"
      POSTGRES_PASSWORD: "sonar"
      POSTGRES_DB: "sonar"    
      PGDATA: /var/lib/postgresql-sonar/data/pgdata
       
{% endif %}        